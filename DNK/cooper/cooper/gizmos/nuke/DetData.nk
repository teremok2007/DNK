set cut_paste_input [stack 0]
version 12.1 v3
BackdropNode {
 inputs 0
 name GetData
 tile_color 0x56822bff
 label "Data - \"\[value result_data]\" "
 note_font "DejaVu Sans Bold Italic"
 note_font_size 20
 selected true
 xpos 34860
 ypos -602
 bdwidth 120
 bdheight 174
 z_order 5
 addUserKnob {20 User}
 addUserKnob {6 is_data_get l DataGet +INVISIBLE +STARTLINE}
 addUserKnob {1 proj l Project}
 proj FAU
 addUserKnob {1 group_name l "Group Name" -STARTLINE}
 group_name 124_0880_SAM
 addUserKnob {22 where_am_i l "Where am I" -STARTLINE}
 addUserKnob {1 result_data l "Result Data"}
 result_data Hell_rnd::/render/Plane_HE111
 addUserKnob {22 get_data l "Get Data" T "import cooper_data as cu_dat\nimport json\nimport nuke\nimport re\nimport os\nimport nukescripts\n\ndef push(panel,in_node,in_dict,in_ver):\n    res=panel.knobs()\['Get'].value()\n    in_node.knob('result_data').setValue(res)\n    in_node.knob('cu_info').setValue(str(in_dict\[res]))\n    in_node.knob('version_info').setValue(str(in_ver\[res]))\n    panel.finishModalDialog(True)\n    \n\n    \n\n\ncu_dict=\{\}\ncu_ver=\{\}\n\ncu_objects=\[]\n\nnode=nuke.thisNode()\n#node=nuke.selectedNode()\nmy_name=node.name()\ngroup=node.knob('group_name').value()\nproj=node.knob('proj').value()\n\n\ncu_obj=cu_dat.GetObjects(group , proj)\ncu_out_arr=\[]\nfor cu_it in cu_obj:\n    \n    cu_arr=cu_it.split('::Keys::')\n    print cu_arr\n    cu_out_arr.append(cu_arr\[0])\n    cu_dict\[cu_arr\[0]]=cu_arr\[1]\n    cu_ver\[cu_arr\[0]]=cu_arr\[2]\n\nmypanel = nukescripts.panels.PythonPanel(group)\n\n\n\nmypanel.addKnob(nuke.CascadingEnumeration_Knob('Get', 'Get' , cu_out_arr))\n\n\nbuttonKnob = nuke.PyScript_Knob('Get This')\nbuttonKnob.setValue('push(mypanel,node,cu_dict,cu_ver)')\n\nmypanel.addKnob(buttonKnob)\n\nmypanel.showModal()\n" +STARTLINE}
 addUserKnob {22 apply_data l "Apply Data" -STARTLINE T "import cooper_data as cu_dat\nimport json\nimport nuke\nimport re\nimport os\nimport nukescripts\n\n\ncu_objects=\[]\n\nnode=nuke.thisNode()\n#node=nuke.selectedNode()\n\n\n\nres_obj=node.knob('result_data').value()\nget_rule=node.knob('get_data_rule').value()\nframe_format=node.knob('frame_format').value()\nproj=node.knob('proj').value()\ngroup=node.knob('group_name').value()\nattrib_apply=node.knob('apply_by_attr').value()\n\nobjects_branches=res_obj.split('::')\n\n\napp_arr = cu_dat.ApplyData(group , proj , objects_branches\[0] , objects_branches\[1] , get_rule , frame_format )\nprint app_arr\n\n\nimport nuke\n\n\n\ncu_objects=\[]\n\n#node=nuke.selectedNode()\n\n\n\nn_x=node.knob(\"xpos\").value()\nn_y=node.knob(\"ypos\").value()\n\n\nbw=120\nnode.knob(\"bdwidth\").setValue(bw)\ni=0\na=0\nfor it in app_arr.keys():\n    node_name=str(node.name())+'_'+str(res_obj)+\"_\"+it\n    my_node=nuke.toNode(node_name)\n\n    if my_node == None:\n        \n \n        my_node=nuke.createNode('Read')\n        my_node\['name'].setValue(node_name)\n        my_node\['first'].setValue(1001)\n        my_node\['last'].setValue(1100)\n        nw=my_node.width()\n        nh=my_node.height() \n        my_node.knob(\"xpos\").setValue(n_x+20+i)\n        my_node.knob(\"ypos\").setValue(n_y+50)\n        \n    i=i+120\n    a=a+1\n    if (my_node.knob(attrib_apply)!=None):\n        my_node.knob(attrib_apply).setValue(app_arr\[it])    \n   \nnode.knob(\"bdwidth\").setValue(bw*a)\n\n\n        \n    "}
 addUserKnob {26 version_info l Versions T "\['0005', '0006', '0007', '0001', '0002']"}
 addUserKnob {26 cu_info l MultyDataKeys:: T "\[]"}
 addUserKnob {20 low_lewel l "Low Lewel"}
 addUserKnob {1 get_data_rule l "Get Data Rule" t "LV - last version\nLT - last time create\nVLD- validated "}
 get_data_rule VLD
 addUserKnob {1 frame_format l "Frame Format"}
 frame_format N
 addUserKnob {1 apply_by_attr l "Apply To Attribute"}
 apply_by_attr file
}
