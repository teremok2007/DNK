set cut_paste_input [stack 0]
version 12.1 v3
push $cut_paste_input
Group {
 name Dalies_create2
 tile_color 0xfffbfbff
 label "\n\n"
 note_font "Verdana Bold Italic"
 note_font_size 20
 selected true
 xpos 34323
 ypos 1898
 addUserKnob {20 Settings}
 addUserKnob {26 ""}
 addUserKnob {2 sequence_path l InputSequencePath}
 addUserKnob {2 project l Project}
 addUserKnob {1 kmb l KMB}
 addUserKnob {1 user l User}
 addUserKnob {3 fb_start l Start}
 fb_start 1001
 addUserKnob {3 fb_end l End -STARTLINE}
 fb_end 1052
 addUserKnob {26 ""}
 addUserKnob {20 afanasy l Afanasy}
 addUserKnob {1 hostmask l HostsMask}
 hostmask fx.*
 addUserKnob {1 hostmaskexclude l HostmaskExclude}
 addUserKnob {20 LowLevel}
 addUserKnob {6 local l LocalTask +STARTLINE}
 addUserKnob {22 a l INVISIBLE +INVISIBLE T "from __future__ import with_statement\nimport nuke\nimport nukescripts\nnode=nuke.thisNode()\ninternalAttr = nuke.Multiline_Eval_String_Knob(\"fgh\")\nnode.addKnob(internalAttr)" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 "" l Script}
 addUserKnob {22 AddScript T "node=nuke.thisNode()\nnodename=node.name()\nscriptnameVal=node.knob(\"scriptname\").value()\nif (scriptnameVal !=\"\"):\n\tscriptcode=scriptnameVal\nelse:\n\tscriptcode=node.knob(\"scriptname\").setValue(nodename)\n\nscriptlocation=node.knob(\"scriptlocation\").value()\nscriptname=node.knob(\"scriptname\").value()\noutLog=\"\"\nif (scriptlocation !=\"\"):\n\t\n\n\tfileName=str(scriptlocation)+str(scriptname)+str('.prescr')\n\n\tif os.path.exists(fileName):\n\t\toutLog=\"This file exists\"\n\telse:\n\t\tf=open(fileName, 'w')\n\t\tf.write('#you code\\n')\n\t\tf.close()\n\t\toutLog=\"File Created\"\n\n\nelse:\n\toutLog=\"Enter Script Location Directory\"\n\n\ndef panel_example(node):\n  p = nuke.Panel(\"Logs\")\n  p.addMultilineTextInput(\"OUT:\", outLog)\n  p.addButton(\"OK\")\n  result = p.show()\n\nmynode=nuke.thisNode()\npanel_example(mynode)" +STARTLINE}
 addUserKnob {22 EditScript -STARTLINE T "import getpass\nimport time\nimport os\nimport re\nimport sys\nimport shutil\n\n\n\n\n\nnode=nuke.thisNode()\nval=str(node.knob(\"scriptname\").value())\nprint val\nfileName=str(node.knob(\"scriptlocation\").value())\nfile=fileName+val+str('.prescr')\n\nif os.path.exists(file):\n    message=str(\"File-    \\\"\")+str(file)+str(\"\\\"     Found\")\n    print message\nelse:\n    message=str(\"File-    \\\"\")+str(file)+str(\"\\\"     NotFound\")\n    print message\n\n\n\nos.popen4(\"xed \"+str(file))"}
 addUserKnob {1 scriptname l ScriptName}
 scriptname pipe_dalies_create
 addUserKnob {1 extention l Extention -STARTLINE}
 extention py
 addUserKnob {2 scriptlocation l "Script Location"}
 scriptlocation /studio/abc/users/bocharov/cooper/cooper/scripts/pipe/
 addUserKnob {22 updateout l "View Out Script" T "\n\n\n\n\n\n\nfrom __future__ import with_statement\nimport nuke\nimport nukescripts\n\nfileCuperScriptDir=\"//a-vfx/stuff/tools/Nuke60/SharedPlugins/cooper/scripts\"\n\ndef re_script(txt):\n\n    import re\n    \n\n    r1= re.compile(r'<<\[^>>]+>>') \n    a=re.findall(r1,txt)\n    txtOut=txt\n    \n    for i in a:\n        preitem=re.sub('<<','',i)\n        item=re.sub('>>','',preitem)\n\n        itemval=str(node.knob(item).value())\n\n        txtOut=re.sub(i,itemval , txtOut )\n    return txtOut\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport sys\n\nnode=nuke.thisNode()\nnodename=node.name()\n\n\nval=str(node.knob(\"scriptname\").value())\nfileName=str(node.knob(\"scriptlocation\").value())\nfileName+=str(\"/\")+val+str('.prescr')\n\n\nif os.path.exists(fileName):\n    message=str(\"File-    \\\"\")+str(fileName)+str(\"\\\"     Found\")\n    print message\nelse:\n    message=str(\"File-    \\\"\")+str(fileName)+str(\"\\\"     Not Found\\n\\tUse Predifened Directory - \\\"../cooper/scripts\\\"\") \n    print message\n    fileName=fileCuperScriptDir+str(\"/\")+val+str('.prescr')\n\n\n\n\n\n\n\nf=open(fileName, 'r')\n\n\n\nimport nuke\nmultilineTextInput = str(f.read())\nmultilineTextOutput=re_script(multilineTextInput)\n\n\n\n\ndef panel_example():\n  p = nuke.Panel(\"Test Panel\")\n\n  p.addMultilineTextInput(\"OUT:\", multilineTextOutput)\n\n  p.addButton(\"OK\")\n  result = p.show()\n\npanel_example()" +STARTLINE}
 addUserKnob {26 "" l "Script Counter"}
 addUserKnob {1 start l Start}
 start 1001
 addUserKnob {1 end l End -STARTLINE}
 end 1001
 addUserKnob {1 step l Step -STARTLINE}
 step 1
 addUserKnob {6 usecounter l "Use Counter" +STARTLINE}
 usecounter true
 addUserKnob {1 command l ResultCommand}
 command "source /studio/tools/rendermanager/cgru/software_setup/setup_houdini.sh;python <<scriptlocation>>compile/<<scriptname>>_<<name>>.<<extention>>"
 addUserKnob {22 viewoutcommand l ViewOutCommand -STARTLINE T "from __future__ import with_statement\nimport nuke\nimport nukescripts\nimport sys\nimport re\n\ndef re_script(txt,nodeb):\n\n\n    r1= re.compile(r'<<\[^>>]+>>') \n    a=re.findall(r1,txt)\n    txtOut=txt    \n    for i in a:\n        preitem=re.sub('<<','',i)\n        item=re.sub('>>','',preitem)\n        if (nodeb.knob(item)!=None):\n            itemval=str(nodeb.knob(item).value())\n        elif (item=='<<NODENAME>>'):\n            itemval=nodeb.name()\n        else:\n            itemval=\"ERRORAAA\"\n        txtOut=re.sub(i,itemval , txtOut )\n\n    return txtOut\n\n\ndef re_frame(txt,fr):\n    import re\n    r1= re.compile(r'<<FF\[^>>]+>>') \n    a=re.findall(r1,txt)\n    txtOut=txt\n    for i in a:\n        preitem=re.sub('<<FF','',i)\n        item=re.sub('>>','',preitem)        \n        padding = int(item)\n        frame = fr\n        txt = \"%0*d\" % (padding, frame) \n        txtOut=re.sub(i,txt , txtOut )    \n    return txtOut\n\n\n\n\n\ndef get_command(node):\n    nodename=node.name()\n    com=str(node.knob(\"command\").value())\n    multilineTextInput = str(com)\n    multilineTextOutput=re_frame(multilineTextInput,1)\n    multilineTextOutput=re_script(multilineTextOutput,node)\n    return multilineTextOutput\n\n\ndef panel_example(node):\n  p = nuke.Panel(\"Test Panel\")\n  p.addMultilineTextInput(\"OUT:\", get_command(node))\n  p.addButton(\"OK\")\n  result = p.show()\n\nmynode=nuke.thisNode()\npanel_example(mynode)"}
}
 Input {
  inputs 0
  name Input1
  xpos 104
  ypos 253
 }
 Read {
  inputs 0
  file_type jpeg
  file /studio/proj/FAU/work/090_1075_POV/3d/render/pb/v0004/pb.####.jpg
  format "1552 1080 0 0 1552 1080 1 "
  first 1001
  last 1052
  origfirst 1001
  origlast 1052
  origset true
  in_colorspace scene_linear
  out_colorspace scene_linear
  name Read1
  selected true
  xpos 103
  ypos 353
  addUserKnob {20 User}
  addUserKnob {22 Copy -STARTLINE T callbacks.copyFile()}
  addUserKnob {22 Move -STARTLINE T callbacks.moveFile()}
  addUserKnob {22 Delete -STARTLINE T callbacks.deleteFile()}
 }
 Output {
  name Output1
  xpos 108
  ypos 530
 }
end_group
